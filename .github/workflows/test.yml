name: Build Kernel for sweet test

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Run at midnight UTC every day.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check yaml.h availability
      run: |
        if [ -f /usr/include/yaml.h ]; then
          echo "yaml.h is available."
        else
          echo "yaml.h is not available."
        fi
        
    - name: Setup Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y flex bison build-essential ccache libssl-dev libelf-dev libncurses5-dev libncursesw5-dev llvm lld clang libyaml-dev device-tree-compiler libghc-libyaml-dev 
        dtc --version
        dpkg -l | grep libyaml

    - name: Checkout kernel source
      uses: actions/checkout@v2
      with:
        repository: 'sajadasadollahi83/kernel_xiaomi_sweet_kewl'
        ref: 'lineage-21-ksu'
        token: ${{ secrets.GITHUB_TOKEN }}
        path: 'kernel'

    - name: Clone PixelOS playground toolchain
      run: |
        git clone --depth=1 https://gitlab.com/PixelOS-Devices/playgroundtc.git -b 17 toolchain
        echo "PATH=$(pwd)/toolchain/bin:/usr/lib/ccache:$PATH" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$(pwd)/toolchain/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

    - name: Set up environment
      run: |
        echo "KBUILD_BUILD_USER=ventur" >> $GITHUB_ENV
        echo "KBUILD_BUILD_HOST=GitHub" >> $GITHUB_ENV
        export LDFLAGS

    - name: Build Kernel
      run: |
        cd kernel
        make O=out ARCH=arm64 sweet_user_defconfig
        make -j$(nproc) O=out ARCH=arm64 LLVM_IAS=1 CC="ccache clang" LD=ld.lld CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi-

    - name: Upload Kernel Artifact
      uses: actions/upload-artifact@v2
      with:
        name: kernel
        path: kernel/out/arch/arm64/boot/Image.gz-dtb
        
