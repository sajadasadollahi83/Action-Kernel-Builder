name: Build Kewl Kernel for sweet

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repo and Set up Python
      uses: actions/checkout@v2
      with:
        repository: 'sajadasadollahi83/kernel_xiaomi_sweet_kewl'
        ref: 'sajadasadollahi83-patch-2'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential bison flex libssl-dev libelf-dev bc ccache glibc-source

    - name: Install Neutron Clang with AntMan
      run: |
        mkdir -p "$HOME/toolchains/neutron-clang"
        cd "$HOME/toolchains/neutron-clang"
        bash <(curl -s "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman") -S > /dev/null
        echo "PATH=$HOME/toolchains/neutron-clang/bin:$PATH" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV
        echo "LD=ld.lld" >> $GITHUB_ENV

    - name: Set Environment Variables
      run: |
        echo "ARCH=arm64" >> $GITHUB_ENV
        echo "KBUILD_BUILD_USER=ventur" >> $GITHUB_ENV
        echo "KBUILD_BUILD_HOST=github-actions" >> $GITHUB_ENV
        echo "CC=ccache clang" >> $GITHUB_ENV
        echo "LD=ld.lld" >> $GITHUB_ENV
        echo "CROSS_COMPILE=aarch64-linux-gnu-" >> $GITHUB_ENV
        echo "CROSS_COMPILE_ARM32=arm-linux-gnueabi-" >> $GITHUB_ENV

    - name: Build Kernel and DTBO
      run: |
        make O=out ARCH=arm64 sweet_user_defconfig
        make -j$(nproc) \
          O=out \
          ARCH=arm64 \
          LLVM_IAS=1 \
          CC="ccache clang" \
          LD=ld.lld \
          CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
          Image.gz-dtb dtbo.img

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: kernel-build
        path: |
          out/arch/arm64/boot/Image.gz-dtb
          out/arch/arm64/boot/dtbo.img
          out
          
